cscope 15 $HOME/workspace/C/bishi/.rootdir/cscope -q 0000000279 0000051873
	@/home/htodog/workspace/C/bishi/10/test_10_1.c

5 
	~<°dio.h
>

22 
	$foo
(
n
)

24 if(
n
==0)

26 if(
n
==1)

28  
	`foo
(
n
-1)+foo(n-2);

29 
	}
}

31 
	$maö
()

33 
tmp
;

34 
tmp
 = 
	`foo
(50);

35 
	`¥ötf
("%Œu\n",
tmp
);

36 
	}
}

	@/home/htodog/workspace/C/bishi/11/test_11_1.c

4 
	~<°dio.h
>

6 
	$mö
(*
numbîs
 , 
Àngth
)

8 
mö
;

9 
i
=0;i<
Àngth
;i++){

10 if(
i
 == 0)

11 
mö
 = 
numbîs
[
i
];

12 if(
numbîs
[
i
] < 
mö
)

13 
mö
 = 
numbîs
[
i
];

15  
mö
;

16 
	}
}

17 
	$ã°
(*
numbîs
,
Àngth
)

19 
p1
 = 0;

20 
p2
 = 
Àngth
-1;

21 
mid
 = 
p1
;

23 
numbîs
[
p1
] >numbîs[
p2
]){

25 if(
p2
-
p1
 == 1)

26  
numbîs
[
p2
];

28 
mid
 = (
p1
+
p2
)/2;

30 if(
numbîs
[
p1
] =numbîs[
p2
] &&Çumbîs[
mid
] ==Çumbers[p2]){

31 
Àngth
 = 
p2
-
p1
+1;

32  
	`mö
(
numbîs
,
Àngth
);

35 if(
numbîs
[
mid
] >numbîs[
p1
])

36 
p1
 = 
mid
;

37 if(
numbîs
[
mid
] <numbîs[
p2
])

38 
p2
 = 
mid
;

41  
numbîs
[
mid
];

42 
	}
}

43 
	$maö
()

45 
mö
;

46 
numbîs
[8] = {3,5,6,3,8,8,2,3};

47 
mö
 = 
	`ã°
(
numbîs
,8);

48 
	`¥ötf
("mö=%d\n",
mö
);

50 
	}
}

	@/home/htodog/workspace/C/bishi/12/test_12_1.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°dboﬁ.h
>

4 
	~<°rög.h
>

5 
	#ROWS
 3

	)

6 
	#COLUMNS
 4

	)

8 
boﬁ
 
£¨ch_∑th
(*
m©rix
,\

9 
rows
,\

10 
cﬁumns
,\

11 
row
,\

12 
cﬁ
,\

13 *
°r
,\

14 
∑th_dìp
,\

15 
boﬁ
 *
boﬁ_m©rix
)

17 
boﬁ
 
	ghas
=
Ál£
;

18 if(
	g°r
[
∑th_dìp
]=='\0')

20  
åue
;

22 if(
	gm©rix
 !
NULL
 && 
boﬁ_m©rix
 != NULL)

24 if(
row
 >0 &&Ñow < 
rows
\

25 &&
cﬁ
 >0 && cﬁ < 
cﬁumns
\

26 &&
m©rix
[
row
*
COLUMNS
+
cﬁ
]==
°r
[
∑th_dìp
]\

27 &&
boﬁ_m©rix
[
row
*
cﬁumns
+
cﬁ
] =
Ál£
)

29 ++
∑th_dìp
;

30 
	gboﬁ_m©rix
[
row
*
cﬁumns
+
cﬁ
]=
åue
;

31 
	ghas
 = 
£¨ch_∑th
(
m©rix
,
rows
,
cﬁumns
,
row
,
cﬁ
-1,
°r
,
∑th_dìp
,
boﬁ_m©rix
)\

32 ||
£¨ch_∑th
(
m©rix
,
rows
,
cﬁumns
,
row
,
cﬁ
+1,
°r
,
∑th_dìp
,
boﬁ_m©rix
)\

33 ||
£¨ch_∑th
(
m©rix
,
rows
,
cﬁumns
,
row
-1,
cﬁ
,
°r
,
∑th_dìp
,
boﬁ_m©rix
)\

34 ||
£¨ch_∑th
(
m©rix
,
rows
,
cﬁumns
,
row
+1,
cﬁ
,
°r
,
∑th_dìp
,
boﬁ_m©rix
);

36 if(!
	ghas
)

37 
	gboﬁ_m©rix
[
row
*
cﬁumns
+
cﬁ
]=
Ál£
;

39  
	ghas
;

41 
boﬁ
 
has_∑th
(*
m©rix
,\

42 
rows
,\

43 
cﬁumns
,\

44 *
°r
)

46 
boﬁ
 
	ghas
=
Ál£
;

47 
boﬁ
 
	gboﬁ_m©rix
[
ROWS
*
COLUMNS
];

48 
mem£t
(
boﬁ_m©rix
,0,
ROWS
*
COLUMNS
);

49 
	g∑th_dìp
=0;

50 
	gi
=0;i<
	grows
;i++)

52 
	gj
=0;j<
	gcﬁumns
;j++)

54 
	ghas
=
£¨ch_∑th
(
m©rix
,
ROWS
,
COLUMNS
,
i
,
j
,
°r
,
∑th_dìp
,
boﬁ_m©rix
);

55 if(
	ghas
)

56  
	gåue
;

59  
	gÁl£
;

61 
	$maö
()

63 
boﬁ
 
has
;

64 
m©rix
[
ROWS
*
COLUMNS
] =\

69 *
°r
="ayqmnglecbj";

71 
has
=
	`has_∑th
(
m©rix
,
ROWS
,
COLUMNS
,
°r
);

72 if(
has
)

73 
	`¥ötf
("ok\n");

75 
	`¥ötf
("noÖath!\n");

76 
	}
}

	@/home/htodog/workspace/C/bishi/13/test_13_1.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<°dboﬁ.h
>

5 
	#ROWS
 3

	)

6 
	#COLUMNS
 3

	)

8 
	$digôÆ_sum
(
num
)

10 
sum
=0;

11 
num
>0)

13 
sum
+=
num
%10;

14 
num
/=10;

16  
sum
;

17 
	}
}

19 
	$check
(*
m©rix
,
rows
,
cﬁumns
,
row
,
cﬁ
,
max
,
boﬁ
 *
boﬁ_m©rix
)

21 
cou¡
=0;

22 if(
m©rix
 !
NULL
 && 
boﬁ_m©rix
 != NULL)

24 if(
row
>=0 &&Ñow<
rows
\

25 &&
cﬁ
>=0 && cﬁ<
cﬁumns
\

26 &&
boﬁ_m©rix
[
row
*
COLUMNS
+
cﬁ
]!=
åue
)

28 
tmp
=0;

29 
tmp
=
	`digôÆ_sum
(
row
)+digôÆ_sum(
cﬁ
);

31 
boﬁ_m©rix
[
row
*
cﬁumns
+
cﬁ
]=
åue
;

32 if(
tmp
 <
max
)

34 
cou¡
=1+
	`check
(
m©rix
,
rows
,
cﬁumns
,
row
,
cﬁ
,
max
,
boﬁ_m©rix
)\

35 +
	`check
(
m©rix
,
rows
,
cﬁumns
,
row
+1,
cﬁ
,
max
,
boﬁ_m©rix
)\

36 +
	`check
(
m©rix
,
rows
,
cﬁumns
,
row
,
cﬁ
-1,
max
,
boﬁ_m©rix
)\

37 +
	`check
(
m©rix
,
rows
,
cﬁumns
,
row
,
cﬁ
+1,
max
,
boﬁ_m©rix
);

41  
cou¡
;

42 
	}
}

44 
	$cou¡_∑th
(*
m©rix
,
rows
,
cﬁumns
,
max
)

46 
boﬁ
 
boﬁ_m©rix
[
ROWS
*
COLUMNS
];

47 
cou¡
=0;

48 
	`mem£t
(
boﬁ_m©rix
,0,
ROWS
*
COLUMNS
);

49 
cou¡
=
	`check
(
m©rix
,
rows
,
cﬁumns
,0,0,
max
,
boﬁ_m©rix
);

50  
cou¡
;

51 
	}
}

53 
	$maö
()

55 
max
=2;

56 
m©rix
[
ROWS
*
COLUMNS
];

57 
cou¡
=0;

58 
	`mem£t
(
m©rix
,1,
ROWS
*
COLUMNS
);

59 
cou¡
=
	`cou¡_∑th
(
m©rix
,
ROWS
,
COLUMNS
,
max
);

60 if(
cou¡
)

61 
	`¥ötf
("cou¡s=%d\n",
cou¡
);

63 
	`¥ötf
("noÖath\n");

64 
	}
}

	@/home/htodog/workspace/C/bishi/14/test_14_1.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	$max_Àngth
(
Àngth
)

5 *
Àn
=
NULL
;

6 if(
Àngth
<2)

8 if(
Àngth
==2)

10 if(
Àngth
==3)

12 
Àn
=(*)
	`mÆloc
(()*(
Àngth
+1));

14 
Àn
[0]=0;

15 
Àn
[1]=1;

16 
Àn
[2]=2;

17 
Àn
[3]=3;

18 
i
=4;i<=
Àngth
;i++)

20 
max
=0;

21 
j
=1;j<=
i
/2;j++)

23 if(
max
<
Àn
[
j
]*Àn[
i
-j])

24 
max
=
Àn
[
j
]*Àn[
i
-j];

26 
Àn
[
i
]=
max
;

28  
Àn
[
Àngth
];

29 
	}
}

30 
	$maö
()

32 
max
=0;

33 
max
=
	`max_Àngth
(10);

34 
	`¥ötf
("max=%d\n",
max
);

35 
	}
}

	@/home/htodog/workspace/C/bishi/15/test_15_1.c

1 
	~<°dio.h
>

2 
	$num_of_1
(
num
)

4 
cou¡s
=0;

5  
num
 )

7 
cou¡s
++;

8 
num
 &= (Çum-1 );

10  
cou¡s
;

11 
	}
}

12 
	$maö
()

14 
cou¡s
=0;

15 
cou¡s
=
	`num_of_1
(255);

16 
	`¥ötf
("cou¡s=%d\n",
cou¡s
);

17 
	}
}

	@/home/htodog/workspace/C/bishi/16/test_16_1.c

1 
	~<°dio.h
>

3 
	$powî
(
num
, 
n
)

5 
ªsu…
=0;

6 i‡(0 =
n
) {

9 i‡(1 =
n
) {

10  
num
;

12 
ªsu…
 = 
	`powî
(
num
, 
n
 >> 1) *Öower(num,n>>1);

13 i‡(0x1 & 
n
) {

14 
ªsu…
 *
num
;

16  
ªsu…
;

17 
	}
}

19 
	$maö
(
¨gc
, * 
¨gv
[])

21 
num
 = 0;

22 
num
 = 
	`powî
(2, 1);

23 
	`¥ötf
("%d\n", 
num
);

24 
	}
}

	@/home/htodog/workspace/C/bishi/17/test_17_1.c

1 
	~<°dboﬁ.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

6 
	$¥öt_c‹e
(* 
num
, 
Àngth
)

8 
boﬁ
 
Êag
 = 
Ál£
;

10 
i
 = 0; i < 
Àngth
; ++i) {

12 i‡(
num
[
i
] > '0' &&Çum[i] <= '9')

13 
Êag
 = 
åue
;

15 i‡(
Êag
)

16 
	`¥ötf
("%c", 
num
[
i
]);

18 
	`¥ötf
(" ");

19 
	}
}

21 
	$¥öt_1_to_num_c‹e
(* 
num
, 
Àngth
, 
ödex
)

23 i‡(
ödex
 =
Àngth
 - 1) {

24 
	`¥öt_c‹e
(
num
, 
Àngth
);

28 
i
 = 0; i < 10; ++i) {

29 
num
[
ödex
 + 1] = '0' + 
i
;

30 
	`¥öt_1_to_num_c‹e
(
num
, 
Àngth
, 
ödex
 + 1);

33 
	`¥ötf
("\n");

34 
	}
}

36 
	$¥öt_1_to_num
(
n
)

38 * 
num
 = 
NULL
;

39 
boﬁ
 
is_ovîÊow
 = 
Ál£
;

40 
num
 = (*)
	`mÆloc
((Ë* (
n
 + 1));

41 i‡(
num
 =
NULL
)

44 
i
 = 0; i < 10; ++i) {

45 
num
[0] = '0' + 
i
;

47 
	`¥öt_1_to_num_c‹e
(
num
, 
n
, 0);

50 
	}
}

52 
	$maö
(
¨gc
, *
¨gv
[])

54 
	`¥öt_1_to_num
(4);

56 
	}
}

	@/home/htodog/workspace/C/bishi/18/test_18_1.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"../öc/li°.h
"

4 
	#LEN
 5

	)

7 
	gnum
[
LEN
] = { 1, 2, 3, 4, 5 };

9 
li°
* 
	$¸ót_li°
(* 
num
)

11 
li°
* 
hód
 = 
NULL
;

12 
li°
* 
tmp
 = 
NULL
;

13 
hód
 = 
	`mÆloc
((
li°
));

14 
hód
->
num
 = 0;

15 
hód
->
√xt
 = 
NULL
;

17 
i
 = 0; i < 
LEN
; ++i) {

18 i‡(0 =
i
) {

19 
hód
->
num
 =Çum[
i
];

20 
tmp
 = 
hód
;

23 
tmp
->
√xt
 = 
	`mÆloc
((
li°
));

24 
tmp
->
√xt
->
num
 =Çum[
i
];

25 
tmp
->
√xt
->√xà
NULL
;

26 
tmp
 =Åmp->
√xt
;

28  
hód
;

29 
	}
}

31 
	$show_li°
(
li°
** 
hód
)

33 
li°
* 
node
 = 
NULL
;

34 i‡(
NULL
 =*
hód
)

36 
node
 = *
hód
;

37 
NULL
 !
node
) {

38 
	`¥ötf
("%d ", 
node
->
num
);

39 
node
 =Çode->
√xt
;

41 
	`¥ötf
("\n");

43 
	}
}

45 
li°
* 
	$föd_node
(
li°
** 
hód
, 
num
)

47 
li°
* 
node
 = *
hód
;

48 
NULL
 !
node
) {

49 i‡(
node
->
num
 ==Çum)

50  
node
;

51 
node
 =Çode->
√xt
;

53  
NULL
;

54 
	}
}

56 
	$dñëe_node
(
li°
** 
hód
, li°* 
node
)

58 
li°
* 
tmp_node
 = 
node
->
√xt
;

59 i‡(
node
->
√xt
 !
NULL
) {

60 
node
->
num
 =Çode->
√xt
->num;

61 
node
->
√xt
 =Çode->next->next;

62 
	`‰ì
(
tmp_node
);

64 
li°
* 
¥e_node
 = *
hód
;

65 
node
 !
¥e_node
->
√xt
) {

66 
¥e_node
 =Öª_node->
√xt
;

68 
¥e_node
->
√xt
 = 
NULL
;

69 
	`‰ì
(
node
);

72 
	}
}

75 
	$maö
()

77 
li°
*Üist;

78 
li°
* 
dñ_node
;

79 
li°
 = 
	`¸ót_li°
(
num
);

80 
	`show_li°
(&
li°
);

81 
dñ_node
 = 
	`föd_node
(&
li°
, 4);

82 
	`dñëe_node
(&
li°
, 
dñ_node
);

83 
	`show_li°
(&
li°
);

84 
	}
}

	@/home/htodog/workspace/C/bishi/20/test_20_1.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<°dlib.h
>

5 
	~<°dboﬁ.h
>

11 
boﬁ
 
	$is_unsig√d_öt
(**
°r
)

13 *
°¨t
 = *
°r
;

14 i‡–**
°r
 == '\0' )

15  
Ál£
;

17 (**
°r
 != '\0') && (**str >= '0') && (**str <= '9') ) {

18 ++(*
°r
);

21 i‡(*
°r
 > 
°¨t
)

22  
åue
;

24  
Ál£
;

25 
	}
}

27 
boﬁ
 
	$is_öt
(**
°r
)

29 i‡–**
°r
 == '\0')

30  
Ál£
;

32 if–**
°r
 == '+' || **str == '-')

33 ++(*
°r
);

35  
	`is_unsig√d_öt
(
°r
);

37 
	}
}

38 
boﬁ
 
	$check_°rög
(*
°r
)

40 
boﬁ
 
∑π_ok
 = 
Ál£
;

41 i‡–*
°r
 == '\0')

42  
Ál£
;

45 
∑π_ok
 = 
	`is_öt
(&
°r
);

48 i‡('.' =*
°r
)

49 ++
°r
;

50 
∑π_ok
 = 
	`is_unsig√d_öt
(&
°r
) ||Öart_ok;

53 i‡('e' =*
°r
 || 'E' == *str) {

54 ++
°r
;

55 
∑π_ok
 = 
	`is_öt
(&
°r
) &&Öart_ok;

56 i‡(
∑π_ok
 && *
°r
 == '\0')

57  
åue
;

59  
Ál£
;

60 
	}
}

62 
	$maö
()

64 
boﬁ
 
tmp
;

65 
°rög
[] = "-123e--456";

66 
tmp
=
	`check_°rög
(
°rög
);

67 i‡–
tmp
 )

68 
	`¥ötf
("true\n");

70 
	`¥ötf
("false\n");

72 
	}
}

	@/home/htodog/workspace/C/bishi/21/test_21_1.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<°dboﬁ.h
>

5 
boﬁ
 
	$is_odd
(
num
)

7 i‡(
num
 & 0x1)

8  
åue
;

10  
Ál£
;

11 
	}
}

13 
	$s‹t_odd_bef‹e_eví
(*
num
,
Àngth
)

15 *
p1
 = 
num
;

16 *
p2
 = 
num
 + 
Àngth
 - 1;

18 i‡–
NULL
 =
num
 )

21 
p1
 < 
p2
) {

22 i‡–
Ál£
==
	`is_odd
–*
p1
Ë&& 
åue
 =is_odd(*
p2
)) {

23 
tmp
;

24 
tmp
 = *
p1
;

25 *
p1
 = *
p2
;

26 *
p2
 = 
tmp
;

27 
p1
++;

28 
p2
--;

30 i‡(
åue
 =
	`is_odd
(*
p1
Ë&&Åruê=is_odd(*
p2
))

31 
p1
++;

32 i‡(
Ál£
 =
	`is_odd
(*
p1
Ë&& fÆ£ =is_odd(*
p2
))

33 
p2
--;

35 
p2
--;

37 
	}
}

38 
	$maö
()

40 
num
[15] = {1,2,3,4,5,1,3,7,8,6,3,11,15,20};

42 
i
 = 0; i < 15; ++i)

43 
	`¥ötf
("%d", 
num
[
i
]);

44 
	`¥ötf
("\n");

45 
	`s‹t_odd_bef‹e_eví
(
num
,15);

47 
i
 = 0; i < 15; ++i)

48 
	`¥ötf
("%d", 
num
[
i
]);

49 
	}
}

	@/home/htodog/workspace/C/bishi/22/test_22_1.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"../öc/li°.h
"

7 
li°
 *
	$li°_but_k
(
li°
 *
hód
, 
k
)

9 i‡–
NULL
 =
hód
 )

10  
NULL
;

12 
li°
 *
p1
 = 
hód
;

13 
li°
 *
p2
 = 
hód
;

15 
i
 = 0; i < 
k
-1; ++i) {

16 i‡–
NULL
 =
p2
->
√xt
 )

17  
NULL
;

18 
p2
 =Ö2->
√xt
;

21 
p2
) {

22 
p2
 =Ö2->
√xt
;

23 
p1
 =Ö1->
√xt
;

26  
p1
;

27 
	}
}

29 
	$maö
()

31 
li°
 *li° = 
NULL
;

32 
li°
 *
node
 = 
NULL
;

33 
num
[9] = {1,2,3,4,5,6,7,8,9};

34 
k
 = 6;

36 
li°
 = 
	`¸ót_li°
(
num
,9);

38 i‡(
NULL
 =
li°
) {

39 
	`¥ötf
("creatÜistÉrror\n");

43 
	`show_li°
(&
li°
);

44 
node
 = 
	`li°_but_k
(
li°
 , 
k
);

45 i‡(
NULL
 =
node
)

47 
	`¥ötf
("Thêœ° buà%d i†%d\n",
k
,
node
->
num
);

51 
	}
}

	@/home/htodog/workspace/C/bishi/23/test_23_1.c

2 
	~<°dio.h
>

3 
	~"../öc/li°.h
"

4 
	~<°dboﬁ.h
>

5 
	~<°dlib.h
>

7 
li°
 *
	$¸ót_li°_has_lo›
(*
num
,
Àngth
)

9 
li°
* 
hód
 = 
NULL
;

10 
li°
* 
tmp
 = 
NULL
;

11 
li°
* 
lo›_°¨t
=
NULL
;

12 
hód
 = 
	`mÆloc
((
li°
));

13 
hód
->
num
 = 0;

14 
hód
->
√xt
 = 
NULL
;

16 
i
 = 0; i < 
Àngth
; ++i) {

17 i‡(0 =
i
) {

18 
hód
->
num
 =Çum[
i
];

19 
tmp
 = 
hód
;

23 
tmp
->
√xt
 = 
	`mÆloc
((
li°
));

24 
tmp
->
√xt
->
num
 =Çum[
i
];

25 
tmp
->
√xt
->√xà
NULL
;

26 
tmp
 =Åmp->
√xt
;

27 i‡(2 =
i
)

28 
lo›_°¨t
 = 
tmp
;

31 i‡(
NULL
 =
lo›_°¨t
)

32  
NULL
;

33 
tmp
->
√xt
 = 
lo›_°¨t
;

34  
hód
;

36 
	}
}

38 
li°
 *
	$föd_lo›_ö_li°
(
li°
 *
hód
)

40 
boﬁ
 
has_lo›
 = 
Ál£
;

41 
lo›_Àngth
=0;

42 i‡–
NULL
 =
hód
 )

43  
NULL
;

45 
li°
 *
p1
 = 
hód
;

46 
li°
 *
p2
 = 
hód
;

47  
NULL
 !
p2
 && NULL !p2->
√xt
) {

48 
p2
 =Ö2->
√xt
->next;

49 
p1
 =Ö1->
√xt
;

50 i‡(
Ál£
 =
has_lo›
) {

51 i‡(
p1
==
p2
) {

52 
has_lo›
 = 
åue
;

57 
has_lo›
) {

58 
	`¥ötf
("456\n");

59 
p1
 =Ö1->
√xt
;

60 
lo›_Àngth
++;

61 i‡(
p1
 =
p2
) {

62 
p1
 = 
hód
;

63 
i
 = 0; i < 
lo›_Àngth
; ++i) {

64 
p2
 =Ö2->
√xt
;

66 
p1
 !
p2
) {

67 
p1
 =Ö1->
√xt
;

68 
p2
 =Ö2->
√xt
;

70  
p1
;

73  
NULL
;

74 
	}
}

76 
	$maö
()

78 
num
[6] = {1,2,3,4,5,6};

79 
li°
 *
lo›_li°
 = 
NULL
;

80 
li°
 *
node
 = 
NULL
;

81 
lo›_li°
 = 
	`¸ót_li°_has_lo›
(
num
,6);

82 i‡–
NULL
 =
lo›_li°
 )

84 
node
 = 
	`föd_lo›_ö_li°
(
lo›_li°
);

85 i‡–
NULL
 =
node
 )

87 
	`¥ötf
("°¨ànodêi†%d\n", 
node
->
num
);

89 
	}
}

	@/home/htodog/workspace/C/bishi/24/test_24_1.c

2 
	~<°dio.h
>

3 
	~"../öc/li°.h
"

4 
	$ªvîsi⁄_li°
(
li°
 **
hód
)

7 
li°
 *
¥e_node
 = 
NULL
;

8 
li°
 *
node
 = 
NULL
;

9 
li°
 *
√xt_node
 = 
NULL
;

10 i‡–
NULL
 =*
hód
 )

13 
¥e_node
 = *
hód
;

15 i‡(
NULL
 =
¥e_node
->
√xt
)

18 
node
 = 
¥e_node
->
√xt
;

20 i‡(
NULL
 =
node
->
√xt
) {

21 
node
->
√xt
 = 
¥e_node
;

22 
¥e_node
->
√xt
 = 
NULL
;

23 *
hód
 = 
node
;

27 
√xt_node
 = 
node
->
√xt
;

28 
√xt_node
) {

29 i‡(*
hód
 =
¥e_node
) {

30 
¥e_node
->
√xt
 = 
NULL
;

31 
node
->
√xt
 = 
¥e_node
;

33 i‡(
NULL
 =
√xt_node
->
√xt
) {

34 
√xt_node
->
√xt
 = 
node
;

35 *
hód
 = 
√xt_node
;

39 
¥e_node
 = 
node
;

40 
node
 = 
√xt_node
;

41 
√xt_node
 =Çext_node->
√xt
;

45 
node
->
√xt
 = 
¥e_node
;

47 i‡(
NULL
 =
√xt_node
->
√xt
) {

48 *
hód
 = 
√xt_node
;

49 
√xt_node
->
√xt
 = 
node
;

53 
¥e_node
 = 
node
;

54 
node
 = 
√xt_node
;

55 
√xt_node
 =Çext_node->
√xt
;

58 
	}
}

59 
	$maö
()

61 
num
[3] = {1,2,3};

62 
li°
 *li° = 
NULL
;

63 
li°
 = 
	`¸ót_li°
(
num
,3);

64 i‡(
NULL
 =
li°
) {

65 
	`¥ötf
("creatÜistÉrror!\n");

68 
	`show_li°
(&
li°
);

69 
	`ªvîsi⁄_li°
(&
li°
);

70 
	`show_li°
(&
li°
);

72 
	}
}

	@/home/htodog/workspace/C/bishi/25/test_25_1.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"../öc/li°.h
"

5 
li°
 *
	$smÆÀr
(
li°
 *
hód1
,li° *
hód2
)

7 
li°
 *
node
 = 
NULL
;

8 i‡(
NULL
 =
hód1
) {

9  
hód2
;

12 i‡–
NULL
 =
hód2
 )

13  
hód1
;

15 i‡(
hód1
->
num
 < 
hód2
->num) {

16 
node
 = 
hód1
;

17 
node
->
√xt
 = 
	`smÆÀr
(
hód1
->√xt,
hód2
);

19 i‡(
hód2
->
num
 < 
hód1
->num) {

20 
node
 = 
hód2
;

21 
node
->
√xt
 = 
	`smÆÀr
(
hód1
,
hód2
->next);

23  
node
;

24 
	}
}

26 
li°
 *
	$comböe_li°1_li°2
–
li°
 *
hód1
,li° *
hód2
)

28 i‡(
NULL
 =
hód1
 || NULL =
hód2
) {

29  
NULL
;

31  
	`smÆÀr
(
hód1
,
hód2
);

32 
	}
}

34 
	$maö
(
¨gc
, *
¨gv
[])

36 
num1
[3] = {1,3,5};

37 
num2
[3] = {2,4,6};

39 
li°
 *
li°1
 = 
NULL
;

40 
li°
 *
li°2
 = 
NULL
;

41 
li°
 *
comböe_li°
 = 
NULL
;

43 
li°1
 = 
	`¸ót_li°
(
num1
 , 3);

44 
li°2
 = 
	`¸ót_li°
(
num2
 , 3);

47 i‡–
NULL
 =
li°1
 || NULL =
li°2
)

49 
	`show_li°
(&
li°1
);

50 
	`show_li°
(&
li°2
);

52 
comböe_li°
 = 
	`comböe_li°1_li°2
(
li°1
 , 
li°2
);

54 
	`show_li°
(&
comböe_li°
);

57 
	}
}

	@/home/htodog/workspace/C/bishi/26/test_26_1.c

1 
	~<°dio.h
>

2 
	~"../öc/åì.h
"

3 
	~<°dboﬁ.h
>

5 
boﬁ
 
	$m©ch_chûd_åì_ªcusi⁄
(
åì
 *
roŸ1
, åì *
roŸ2
)

7 i‡–
NULL
 =
roŸ2
 ) {

8  
åue
;

11 i‡(
NULL
 =
roŸ1
) {

12  
Ál£
;

14 if(
roŸ1
->
d©a
 !
roŸ2
->data)

15  
Ál£
;

16 i‡(
	`m©ch_chûd_åì_ªcusi⁄
(
roŸ1
->
lchûd
 , 
roŸ2
->lchild)\

17 && 
	`m©ch_chûd_åì_ªcusi⁄
(
roŸ1
->
rchûd
 , 
roŸ2
->rchild)) {

18  
åue
;

20  
Ál£
;

21 
	}
}

23 
boﬁ
 
	$is_chûd_åì_ªcusi⁄
(
åì
 *
roŸ
, åì *
chûd_roŸ
)

25 
boﬁ
 
ªsu…
 = 
Ál£
;

26 i‡(
NULL
 =
roŸ
 || NULL =
chûd_roŸ
) {

27  
Ál£
;

32 i‡(
roŸ
->
d©a
 =
chûd_roŸ
->data)

33 
ªsu…
 = 
	`m©ch_chûd_åì_ªcusi⁄
(
roŸ
,
chûd_roŸ
);

34 i‡(
Ál£
 =
ªsu…
) {

35 
ªsu…
 = 
	`is_chûd_åì_ªcusi⁄
(
roŸ
->
lchûd
,
chûd_roŸ
);

37 i‡(
Ál£
 =
ªsu…
) {

38 
ªsu…
 = 
	`is_chûd_åì_ªcusi⁄
(
roŸ
->
rchûd
,
chûd_roŸ
);

40  
ªsu…
;

42 
	}
}

43 
	$maö
(
¨gc
, *
¨gv
[])

45 
boﬁ
 
ªsu…
 = 
Ál£
;

46 
åì
 *åì = 
NULL
;

47 
åì
 *
chûd_åì
 = 
NULL
;

48 *
°r1
 = "889##24##7##7##";

49 *
°r2
 = "89##2##";

50 
	`¸ót_åì
(&
åì
 , &
°r1
);

51 
	`¸ót_åì
(&
chûd_åì
 , &
°r2
);

52 
ªsu…
 = 
	`is_chûd_åì_ªcusi⁄
(
åì
,
chûd_åì
);

53 i‡(
ªsu…
) {

54 
	`¥ötf
("match ok!\n");

57 
	`¥ötf
("can't match!\n");

61 
	}
}

	@/home/htodog/workspace/C/bishi/27/test_27_1.c

1 
	~<°dio.h
>

2 
	~"../öc/åì.h
"

4 
	$exch™ge
(
åì
 *
roŸ
)

6 
åì
 *
tmp
;

7 i‡–
NULL
 =
roŸ
 )

9 i‡–
NULL
 =
roŸ
->
lchûd
 && NULL =roŸ->
rchûd
)

12 
tmp
 = 
roŸ
->
lchûd
;

13 
roŸ
->
lchûd
 =ÑoŸ->
rchûd
;

14 
roŸ
->
rchûd
 = 
tmp
;

16 
	`exch™ge
(
roŸ
->
lchûd
);

17 
	`exch™ge
(
roŸ
->
rchûd
);

19 
	}
}

20 
	$múr‹_åì
(
åì
 *
roŸ
)

23 
åì
 *
tmp
;

24 i‡(
NULL
 =
roŸ
) {

25 
	`¥ötf
("tree isÇull\n");

29 i‡–
NULL
 =
roŸ
->
lchûd
 && NULL =roŸ->
rchûd
) {

30 
	`¥ötf
("tree hasÇo childs!\n");

34 
tmp
 = 
roŸ
->
lchûd
;

35 
roŸ
->
lchûd
 =ÑoŸ->
rchûd
;

36 
roŸ
->
rchûd
 = 
tmp
;

38 
	`exch™ge
(
roŸ
->
lchûd
);

39 
	`exch™ge
(
roŸ
->
rchûd
);

40 
	}
}

42 
	$maö
(
¨gc
, *
¨gv
[])

44 
åì
 *åì = 
NULL
;

45 *
°r
 = "865##7##19##2";

46 
	`¸ót_åì
(&
åì
,&
°r
);

47 
	`ã°_åì
(
åì
);

48 
	`múr‹_åì
(
åì
);

49 
	`ã°_åì
(
åì
);

51 
	}
}

	@/home/htodog/workspace/C/bishi/28/test_28_1.c

1 
	~<°dio.h
>

2 
	~"../öc/åì.h
"

3 
	~<°dboﬁ.h
>

5 
Såög
 
	g°r_tmp
;

6 
	$¥e_‹dî_åavî£_‰om_right
(
åì
 *
roŸ
)

8 i‡(
NULL
 =
roŸ
) {

11 
	`¥ötf
("%c", 
roŸ
->
d©a
);

12 
	`¥e_‹dî_åavî£_‰om_right
(
roŸ
->
rchûd
);

13 
	`¥e_‹dî_åavî£_‰om_right
(
roŸ
->
lchûd
);

14 
	}
}

16 
boﬁ
 
	$check_symmëriˇl_åì
(
åì
 *
roŸ
)

18 
	`¥e_‹dî_åavî£
(
roŸ
);

19 
	`¥ötf
("\n");

20 
	`¥e_‹dî_åavî£_‰om_right
(
roŸ
);

21  
åue
;

22 
	}
}

23 
	$maö
(
¨gc
, *
¨gv
[])

25 *
°r
 = "865##7##67##5##";

26 
åì
 *åì = 
NULL
;

27 
	`¸ót_åì
(&
åì
,&
°r
);

28 
	`check_symmëriˇl_åì
(
åì
);

30 
	}
}

	@/home/htodog/workspace/C/bishi/3/test3_1.c

6 
	~<°dio.h
>

7 
	#VICTOR_SIZE
 10

	)

8 
	gª≥©
;

9 
	$sw≠
(* 
a
,* 
b
)

11 
c
;

12 
c
 = *
a
;

13 *
a
 = *
b
;

14 *
b
 = 
c
;

15 
	}
}

16 
	$¥öt_shuzu
(
ãmp
[])

18 
i
;

19 
i
=0;i<
VICTOR_SIZE
;i++)

21 
	`¥ötf
("%d ",
ãmp
[
i
]);

23 
	`¥ötf
("\n");

24 
	}
}

25 
	$ã°3
(
ãmp
[])

27 
i
,
j
;

28 
j
 = 0;

29 
i
 = 0;i<
VICTOR_SIZE
;i++)

31 
i
 !
ãmp
[i])

34 if(
ãmp
[
i
]==temp[temp[i]])

36 
ª≥©
 = 
ãmp
[
i
];

42 
	`sw≠
(&(
ãmp
[
i
]),&(temp[temp[i]]));

43 
j
++;

45 if((
VICTOR_SIZE
-1)==
j
)

47 
j
 = 0;

52 
	}
}

53 
	$maö
()

56 
ãmp
[
VICTOR_SIZE
] = {1,2,3,0,3,2,6,4,9,8};

57 if(0==
	`ã°3
(
ãmp
))

59 
	`¥ötf
("okÇum=%d\n",
ª≥©
);

62 
	`¥ötf
("ª≥© = %d\n",
ª≥©
);

63 
	}
}

	@/home/htodog/workspace/C/bishi/3/test3_2.c

1 
	~<°dio.h
>

2 
	#VECTOR_SIZE
 7

	)

8 
	$cou¡_ønge
(* 
ve˘‹
,
À¡h
,
°¨t
,
íd
)

10 
cou¡
=0;

11 
i
;

12 
i
=0;i<
À¡h
;i++)

14 if(
ve˘‹
[
i
]>=
°¨t
&&ve˘‹[i]<=
íd
)

16 
cou¡
++;

19  
cou¡
;

20 
	}
}

21 
	$maö
()

23 
°¨t
=1;

24 
íd
=
VECTOR_SIZE
-1;

25 
middÀ
=0;

26 
cou¡
=0;

27 
ve˘‹
[
VECTOR_SIZE
]={1,5,3,4,6,2,6};

28 
íd
>=
°¨t
)

31 
middÀ
=((
íd
-
°¨t
)>>1)+start;

32 
cou¡
=
	`cou¡_ønge
(
ve˘‹
,
VECTOR_SIZE
,
°¨t
,
middÀ
);

35 if(
íd
==
°¨t
)

40 if(
cou¡
>1)

42 
	`¥ötf
("ok\n");

43  
íd
;

47 
	`¥ötf
("faulse\n");

55 if(
cou¡
>
middÀ
-
°¨t
+1)

57 
íd
=
middÀ
;

61 
°¨t
=
middÀ
+1;

64 
	}
}

	@/home/htodog/workspace/C/bishi/30/test_30_1.c

1 
	~<°dio.h
>

2 
	~"../öc/°ack.h
"

	@/home/htodog/workspace/C/bishi/31/test_31_1.c

1 
	~<°dio.h
>

2 
	~"../öc/°ack.h
"

3 
	~<°dboﬁ.h
>

6 
boﬁ
 
	$check_£quí˚s
–*
£q1
,*
£q2
, 
°ack
 *°ack , 
Àngth
 )

8 
cuºít_£q1
 = 0;

9 
boﬁ
 
is_föd
 = 
Ál£
;

12 
i
 = 0; i < 
Àngth
; ++i) {

14 i‡–
°ack
->
	`is_em±y
(°ackË=
Ál£
 && 
£q2
[
i
] =°ack->
num
 ) {

15 
	`¥ötf
("ò%d\n", 
i
);

16 
	`¥ötf
("fú°Ö›:%d\n",
°ack
->
	`p›
(&stack));

18 i‡(
i
==
Àngth
-1)

19  
åue
;

24  
j
 = 
cuºít_£q1
; j < 
Àngth
 ; ++j ) {

25 
°ack
->
	`push
(
£q1
[
j
] , &stack);

26 
	`¥ötf
("push:%d\n", 
£q1
[
j
]);

27 i‡(
£q2
[
i
] =
°ack
->
num
) {

29 
cuºít_£q1
 = 
j
+1;

34 
	`¥ötf
("£q2[%d] = %dÅ› = %d\n", 
i
,
£q2
[i],
°ack
->
num
);

36 i‡(
£q2
[
i
] =
°ack
->
num
) {

37 
	`¥ötf
("£c⁄dÖ›:%d\n", 
°ack
->
	`p›
(&stack));

41 i‡(
Àngth
 =
cuºít_£q1
 && 
£q2
[
i
] !
°ack
->
num
) {

43 
	`¥ötf
("£q2[%d] = %dÅ› = %d\n", 
i
,
£q2
[i],
°ack
->
num
);

45  
Ál£
;

49  
åue
;

50 
	}
}

52 
	$maö
()

54 
£q1
[5] = {1,2,3,4,5};

55 
£q2
[5] = {4,3,5,1,2};

56 
£q3
[5] = {4,5,3,2,1};

58 
°ack
 *°ack = 
NULL
;

60 
°ack
 = 
	`¸ót_°ack
();

62 if–
	`check_£quí˚s
(
£q1
 , 
£q3
 , 
°ack
 ,5) ) {

63 
	`¥ötf
("ok!\n");

67 
	`¥ötf
("can't find!\n");

70 
	}
}

	@/home/htodog/workspace/C/bishi/32/test_32_1.c

1 
	~<°dio.h
>

2 
	~"../öc/åì.h
"

3 
	~"../öc/queue.h
"

4 
	~"../öc/°ack.h
"

6 
°ack
 *
	g°ack
 = 
NULL
;

7 
queue
 *
	gqueue
 = 
NULL
;

9 
	$¥öt_åì_œyî
(
åì
 *
roŸ
)

11 
åì
 *
tmp
 = 
NULL
;

13 
œyî_˙t
 = 0;

14 
œyî_node_˙t
=0;

15 
√xt_œyî_˙t
=0;

17 i‡–
NULL
 =
roŸ
 ) {

18 
	`¥ötf
("tree isÉmpty\n");

22 
queue
->
	`push
(
roŸ
 , &queue);

23 
œyî_node_˙t
++;

24 
œyî_˙t
++;

26 
queue
->
èû
) {

27 
tmp
 = 
queue
->
	`p›
(&queue);

28 
œyî_node_˙t
--;

30 i‡(!(
œyî_˙t
%2)) {

31 
°ack
->
	`push
((
tmp
->
d©a
-'0') , &stack);

33 
	`¥ötf
("%¯",
tmp
->
d©a
);

36 
queue
->
	`push
(
tmp
->
lchûd
 , &queue);

37 
√xt_œyî_˙t
++;

38 
queue
->
	`push
(
tmp
->
rchûd
 , &queue);

39 
√xt_œyî_˙t
++;

41 if–0 =
œyî_node_˙t
 ) {

42 
œyî_node_˙t
 = 
√xt_œyî_˙t
;

43 if(!(
œyî_˙t
%2)) {

44 !
°ack
->
	`is_em±y
(stack)) {

45 
	`¥ötf
("%d ",
°ack
->
	`p›
(&stack));

48 
œyî_˙t
++;

49 
	`¥ötf
("\n");

52 
	`¥ötf
("\n");

53 
	}
}

55 
	$maö
()

57 
åì
 *åì = 
NULL
;

58 *
°r
 = "124##5##36##7##";

59 
	`¸ót_åì
(&
åì
,&
°r
);

60 
	`ã°_åì
(
åì
);

61 
queue
 = 
	`¸ót_queue
();

62 
°ack
 = 
	`¸ót_°ack
();

63 
	`¥öt_åì_œyî
(
åì
);

64 
	}
}

	@/home/htodog/workspace/C/bishi/33/test_33_1.c

1 
	~<°dio.h
>

2 
	~"../öc/åì.h
"

3 
	~"../öc/queue.h
"

4 
	~"../öc/°ack.h
"

5 
	~<°dboﬁ.h
>

9 
boﬁ
 
	$check_£quí˚_is_åì
(*
°¨t
,*
íd
)

11 *
p
 = 
°¨t
;

12 
roŸ
 = *
íd
;

13 
boﬁ
 
À·_ok
 = 
Ál£
;

14 
boﬁ
 
right_ok
 = 
Ál£
;

15 i‡–
°¨t
 =
íd
 ) {

16  
åue
;

20 *
p
 < 
roŸ
) {

21 
p
++;

23 * 
i
 = 
°¨t
; i < 
p
; ++i) {

24 i‡(*
i
 > 
roŸ
) {

25  
Ál£
;

28 *
i
 = 
p
; i < 
íd
; ++i) {

29 if(*
i
 < 
roŸ
)

30  
Ál£
;

33 
À·_ok
 = 
	`check_£quí˚_is_åì
–
°¨t
 , 
p
-1 );

35 
right_ok
 = 
	`check_£quí˚_is_åì
–
p
 , 
íd
-1 );

36  
À·_ok
 && 
right_ok
;

37 
	}
}

38 
	$maö
()

40 
num
[7] = { 4,7,6,9,1,10,8 };

41 if–
	`check_£quí˚_is_åì
–
num
 ,Çum+6 ))

42 
	`¥ötf
("ok\n");

44 
	`¥ötf
("error\n");

46 
	}
}

	@/home/htodog/workspace/C/bishi/34/test_34_1.c

1 
	~<°dio.h
>

2 
	~"../öc/åì.h
"

3 
	~"../öc/queue.h
"

4 
	~"../öc/°ack.h
"

5 
	~<°dboﬁ.h
>

7 
	gsum
 = 0;

8 
°ack
 *
	g°ack
;

10 
	$föd_∑th_sum
–
åì
 *
roŸ
 , 
num
 )

13 
sum
 +
roŸ
->
d©a
 - '0';

14 
°ack
->
	`push
–
roŸ
 ,&stack );

16 if–
NULL
 =
roŸ
->
lchûd
 && NULL =roŸ->
rchûd
 ) {

17 if–
sum
 =
num
 ) {

18 
	`¥ötf
("find!\n");

28 
	`föd_∑th_sum
–
roŸ
->
lchûd
 , 
num
 );

30 
	`¥ötf
("sum1 = %d\n",
sum
 );

31 if–
NULL
 !
°ack
) {

32 
åì
 *
tmp
 = 
NULL
;

33 
tmp
 = 
°ack
->
	`p›
(&stack);

34 
sum
 -
tmp
->
d©a
-'0';

37 
	`föd_∑th_sum
–
roŸ
->
rchûd
 , 
num
 );

39 
	`¥ötf
("sum2 = %d\n",
sum
 );

40 if–
NULL
 !
°ack
) {

41 
åì
 *
tmp
 = 
NULL
;

42 
tmp
 = 
°ack
->
	`p›
(&stack);

43 
sum
 -
tmp
->
d©a
-'0';

46 
	}
}

47 
	$föd_∑th
–
åì
 *
roŸ
 , 
num
 )

49 i‡–
NULL
 =
roŸ
 ) {

50 
	`¥ötf
("tree isÉmpty\n");

54 
	`föd_∑th_sum
–
roŸ
 , 
num
 );

56 
sum
 -
roŸ
->
d©a
 - '0';

57 
°ack
->
	`p›
(&stack);

58 
	}
}

59 
	$maö
()

61 
åì
 *åì = 
NULL
;

62 *
°r
 = "124##2##15##6##";

63 
°ack
 = 
	`¸ót_°ack
();

64 
	`¸ót_åì
(&
åì
 , &
°r
);

65 
	`ã°_åì
(
åì
);

66 
	`föd_∑th
–
åì
 , 7 );

67 
	}
}

	@/home/htodog/workspace/C/bishi/35/test_35_1.c

1 
	~<°dio.h
>

2 
	~<°dboﬁ.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~"../öc/åì.h
"

6 
	~"../öc/queue.h
"

7 
	~"../öc/°ack.h
"

8 
	~"../öc/li°.h
"

10 
	$¸ót_c›y_node
–
li°
 ** 
hód
)

12 
li°
 *
cuºít
 = *
hód
;

13 
li°
 *
√w_node
 = 
NULL
;

15 
cuºít
) {

16 
√w_node
 = 
	`mÆloc
––
li°
 ) );

17 
	`mem˝y
–
√w_node
 , 
cuºít
 , –
li°
 ));

18 
√w_node
->
√xt
 = 
cuºít
->next;

19 
cuºít
->
√xt
 = 
√w_node
;

20 
cuºít
 = 
√w_node
;

21 
cuºít
 = cuºít->
√xt
;

23 
	}
}

24 
	$modify_c›y_node_sûbög
–
li°
 **
hód
 )

26 
li°
 *
cuºít
 = *
hód
;

27 
li°
 *
√w_node
 = 
NULL
;

28 
cuºít
) {

29 i‡(
NULL
 =
cuºít
->
siblög
) {

30 
cuºít
 = cuºít->
√xt
->next;

33 
cuºít
->
√xt
->
siblög
 = current->sibling->next;

34 
cuºít
 = cuºít->
√xt
->next;

36 
	}
}

37 
li°
 *
	$£∑øã
–
li°
 **list )

41 
li°
 *
hód
 = *list;

42 
li°
 *
c›y_hód
 = (*li°)->
√xt
;

43 
li°
 *
p1
 = 
hód
;

44 
li°
 *
p2
 = 
c›y_hód
;

46 
p1
->
√xt
 = 
p2
->next;

47 
p1
 = 
p2
->
√xt
;

48 i‡(
NULL
 =
p1
)

50 
p2
->
√xt
 = 
p1
->next;

51 
p2
 =Ö2->
√xt
;

53  
c›y_hód
;

54 
	}
}

55 
li°
 *
	$c›y_li°
–
li°
 *list )

57 
	`¸ót_c›y_node
–&
li°
 );

58 
	`modify_c›y_node_sûbög
–&
li°
 );

59  
	`£∑øã
–&
li°
 );

60 
	}
}

61 
	$maö
(
¨gc
, *
¨gv
[])

63 
li°
 *li° = 
NULL
;

64 
li°
 *
li°_c›y
 = 
NULL
;

65 
num
[5] = {1,2,3,4,5};

66 
li°
 = 
	`¸ót_li°
–
num
 , 5 );

67 
	`¥ötf
("li° %∞\n",
li°
);

68 
	`show_li°
–&
li°
 );

69 
li°_c›y
 = 
	`c›y_li°
(
li°
);

70 
	`¥ötf
("c›y %∞\n",
li°_c›y
);

71 
	`show_li°
–&
li°_c›y
 );

73 
	}
}

	@/home/htodog/workspace/C/bishi/36/test_36_1.c

1 
	~<°dio.h
>

2 
	~<°dboﬁ.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~"../öc/åì.h
"

6 
	~"../öc/queue.h
"

7 
	~"../öc/°ack.h
"

8 
	~"../öc/li°.h
"

10 
	$c⁄vît_c‹e
–
åì
 *
åì_node
 , åì **
cuºít_li°_node
 )

12 i‡–
NULL
 =
åì_node
 ) {

15 i‡(
NULL
 !
åì_node
->
lchûd
) {

16 
	`c⁄vît_c‹e
–
åì_node
->
lchûd
 , 
cuºít_li°_node
 );

18 i‡–
NULL
 =*
cuºít_li°_node
 ) {

19 *
cuºít_li°_node
 = 
åì_node
;

20 (*
cuºít_li°_node
)->
lchûd
 = 
NULL
;

22 (*
cuºít_li°_node
)->
rchûd
 = 
åì_node
;

23 
åì_node
->
lchûd
 = (*
cuºít_li°_node
);

24 *
cuºít_li°_node
 = 
åì_node
;

27 i‡(
NULL
 !
åì_node
->
rchûd
) {

28 
	`c⁄vît_c‹e
–
åì_node
->
rchûd
 , 
cuºít_li°_node
 );

31 
	}
}

33 
åì
 *
	$åì_c⁄vît_li°
–
åì
 *
roŸ
 )

35 
åì
 *
li°
 = 
NULL
;

36 i‡–
NULL
 =
roŸ
 ) {

37 
	`¥ötf
("root isÇull\n");

38  
NULL
;

40 
	`c⁄vît_c‹e
–
roŸ
 , &
li°
 );

41  
li°
;

42 
	}
}

44 
	$maö
()

46 
åì
 *åì = 
NULL
;

47 
åì
 *
li°
 = 
NULL
;

48 * 
°r
 = "421##3##76##8##";

49 
	`¸ót_åì
–&
åì
 , &
°r
 );

50 
li°
 = 
	`åì_c⁄vît_li°
–
åì
 );

51 if–
li°
 !
NULL
 ) {

52  
li°
 ) {

53 
	`¥ötf
–"%¯",
li°
->
d©a
 );

54 
li°
 =Üi°->
lchûd
;

57 
	}
}

	@/home/htodog/workspace/C/bishi/38/test_38_1.c

1 
	~<°dio.h
>

2 
	~<°dboﬁ.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~"../öc/åì.h
"

6 
	~"../öc/queue.h
"

7 
	~"../öc/°ack.h
"

8 
	~"../öc/li°.h
"

11 
	$¥öt_°rög
–*
°r
 )

13 *
ch
 = 
°r
;

14  *
ch
 != '\0' )

16 
	`¥ötf
("%c",*
ch
);

17 
ch
++;

19 
	`¥ötf
("\n");

20 
	}
}

22 
	$sw≠
–*
ch1
,*
ch2
)

24 
tmp
;

25 
tmp
 = *
ch1
;

26 *
ch1
 = *
ch2
;

27 *
ch2
 = 
tmp
;

28 
	}
}

30 
	$≥rmuèti⁄_™d_combö©i⁄
(*
°¨t
 , *
íd
 ,*
°r
)

32 *
p1
 = 
°¨t
;

33 *
p2
 = 
°¨t
;

35 i‡–
°¨t
 =
íd
 ) {

36 
	`¥öt_°rög
(
°r
);

39  *
p2
 != '\0' )

41 
	`sw≠
–
p1
 , 
p2
 );

42 
	`≥rmuèti⁄_™d_combö©i⁄
–
°¨t
+1 , 
íd
 ,
°r
);

43 
	`sw≠
–
p1
 , 
p2
 );

44 
p2
++;

46 
	}
}

48 
	$maö
()

51 *
°r
 = 
NULL
;

52 
tmp
;

53 *
c⁄°_°rög
 = "abcd";

54 
°r
 = (*)
	`mÆloc
( ()*100 );

56 
	`mem˝y
–
°r
 , 
c⁄°_°rög
 , 
	`°æí
( const_string ) );

58 
	`≥rmuèti⁄_™d_combö©i⁄
–
°r
 , så+
	`°æí
(str)-1,str );

61 
	}
}

	@/home/htodog/workspace/C/bishi/38/test_38_2.c

1 
	~<°dio.h
>

2 
	~<°dboﬁ.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~"../öc/åì.h
"

6 
	~"../öc/queue.h
"

7 
	~"../öc/°ack.h
"

8 
	~"../öc/li°.h
"

9 
	gm
 = 0;

17 
	$¥öt_°rög
–*
p
[],
num
 )

19 
ödex
 = 
num
 -1;

20  *
p
[
ödex
] != '\0' ) {

21 
i
 = 0; i < 
num
; ++i) {

22 
	`¥ötf
("%c" ,*(
p
[
i
]));

24 
m
++;

25 
	`¥ötf
("\n");

26 ++
p
[
ödex
];

28 
	}
}

36 
	$adju°_poöt
–*
p
[] , 
ödex
 ,
num
 , *
íd
)

38 
boﬁ
 
Êag
 = 
åue
;

39 
max_ödex
 = 
num
-1;

40  
Êag
 ) {

41 
i
 = 
ödex
; i < 
max_ödex
 ; i++) {

42 i‡–
i
==
ödex
 ) {

43 ++
p
[
i
];

44 
Êag
 = (
num
 - 
ödex
Ë<(
íd
 - 
p
[
i
])/();

46 
p
[
i
] =Ö[i-1]+1;

49 
p
[
num
-1] =Ö[num-2]+1;

51 
	`¥öt_°rög
–
p
,
num
 );

53 
	}
}

73 
	$comböe
–*
°r
 , 
num
 ,*
íd
)

75 *
p
[
num
];

76 if(
num
 == 0)

80 
i
 = 0; i < 
num
; ++i) {

81 
p
[
i
] = 
°r
 + i;

84 i‡(1 =
num
)

86 
	`¥öt_°rög
–
p
,
num
 );

90 i‡(
	`°æí
(
°r
Ë=
num
)

92 
	`¥öt_°rög
–
p
,
num
 );

111 
max_ödex
 = 
num
 -1;

112 
i
 = 
max_ödex
; i >= 0 ; --i) {

113 i‡(
i
 == 0) {

114 
	`¥öt_°rög
–
p
,
num
 );

117 i‡(
i
 =
max_ödex
) {

118 
	`¥öt_°rög
–
p
,
num
 );

121 
	`adju°_poöt
–
p
 , 
i
 , 
num
 ,
íd
 );

123 
°r
++;

124 
	`comböe
–
°r
 , 
num
 ,(°r+
	`°æí
( str )-1));

125 
	}
}

127 
	$maö
()

129 *
°r_vÆ
 = "abcde";

130 *
°r
 = 
NULL
;

132 
°r
 = 
	`mÆloc
(()*
	`°æí
(
°r_vÆ
));

133 
	`°∫˝y
–
°r
 , 
°r_vÆ
 , 
	`°æí
(str_val) );

135 
i
 = 
	`°æí
(
°r
); i >0 ; --i) {

136 
	`comböe
–
°r
 , 
i
 ,°∏+ 
	`°æí
( str ));

139 
	`¥ötf
("m = %d\n",
m
);

140 
	}
}

	@/home/htodog/workspace/C/bishi/4/test4_1.c

1 
	~<°dio.h
>

2 
	gve˘‹
[4][4]={{1,2,4,5},\

6 
	$show_ve˘‹
(
ve˘‹
[4][4],
cﬁumn
,
row
)

8 
i
,
j
;

9 
i
=0;i<
row
;i++)

11 
j
=0;j<
cﬁumn
;j++)

13 
	`¥ötf
("%d ",
ve˘‹
[
i
][
j
]);

15 
	`¥ötf
("\n");

18 
	}
}

19 
	$föd_num
(
ve˘‹
[4][4],
culomn
,
row
,
num
)

21 
i
,
j
;

22 
i
=0;

23 
j
=
culomn
-1;

24 
i
<
row
&&
j
>=0)

26 if(
ve˘‹
[
i
][
j
]==
num
)

28 
	`¥ötf
("row=%d,culomn=%d\n",
i
,
j
);

31 if(
num
>
ve˘‹
[
i
][
j
])

32 
i
++;

34 
j
--;

36 
	`¥ötf
("False\n");

38 
	}
}

39 
	$maö
()

41 
num
;

42 
	`sˇnf
("%d",&
num
);

43 
	`föd_num
(
ve˘‹
,4,4,
num
);

44 
	}
}

	@/home/htodog/workspace/C/bishi/5/test5_1.c

10 
	~<°dio.h
>

11 
	~<°rög.h
>

12 
	~<°dlib.h
>

13 
	$show_°rög
(c⁄° * 
°rög
)

15 if(
NULL
==
°rög
)

17 
	`¥ötf
("error1\n");

20 '\0'!=*
°rög
)

22 
	`¥ötf
("%c",*
°rög
);

23 
°rög
++;

25 
	`¥ötf
("\n");

27 
	}
}

28 
	$chóck_bœnk
(c⁄° * 
°rög
)

30 
cou¡
=0;

31 if(
NULL
==
°rög
)

33 
	`¥ötf
("error2\n");

36 '\0'!=*
°rög
)

38 if(' '==*
°rög
)

40 
cou¡
++;

41 
°rög
++;

45 
°rög
++;

48  
cou¡
;

49 
	}
}

51 
	$ch™ge_°rög
(* 
°rög
,
bœnk_cou¡s
)

53 
ª∂a˚
[3]={'0','2','%'};

54 *
p1
;

55 *
p2
;

56 
Àns
,
ª∂a˚_Àn
;

57 
i
;

58 
Àns
 = 
	`°æí
(
°rög
);

59 
ª∂a˚_Àn
=
	`°æí
(
ª∂a˚
);

60 
p1
=
°rög
+
Àns
+1;

61 
p2
=
p1
+
bœnk_cou¡s
*(
ª∂a˚_Àn
-1);

62 
	`show_°rög
(
ª∂a˚
);

63 if(
NULL
==
p1
||NULL==
p2
)

65 
	`¥ötf
("error\n");

69 if(' '==*
p1
)

71 
i
=0;i<
ª∂a˚_Àn
;i++)

73 *
p2
=
ª∂a˚
[
i
];

74 
p2
--;

76 
p1
--;

80 *
p2
=*
p1
;

81 if(
p1
==
°rög
)

83 
	`show_°rög
(
°rög
);

86 
p1
--;

87 
p2
--;

91 
	}
}

92 
	$maö
()

94 * 
°rög
;

95 * 
ãmp_°rög
="weáre happyÇew year hello";

96 
bœnk_cou¡s
;

97 
°rög
=(*)
	`mÆloc
(100);

98 
	`°r˝y
(
°rög
,
ãmp_°rög
);

99 
bœnk_cou¡s
=
	`chóck_bœnk
(
°rög
);

100 
	`ch™ge_°rög
(
°rög
,
bœnk_cou¡s
);

101 
	}
}

	@/home/htodog/workspace/C/bishi/6/test_6_1.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

5 
	sNode
{

6 
	mnum
;

7 
Node
 * 
	mpHód
;

8 
Node
 * 
	mpNext
;

9 
Node
 * 
	mpTaû
;

10 }
	tLi°Node
;

11 
	s°ack
{

12 
	mnum
;

13 
°ack
 *
	mt›
;

14 
°ack
 *
	m√xt
;

15 }
	tSTACK
;

17 
STACK
 *
	g°ack
 = 
NULL
;

19 
STACK
 * 
	$¸ót_°ack
()

21 
STACK
 *
°ack
;

22 
°ack
=(
STACK
 *)
	`mÆloc
((STACK));

23 
°ack
->
num
=0;

24 
°ack
->
√xt
=
NULL
;

25 
°ack
->
t›
=stack;

26  
°ack
;

27 
	}
}

28 
	$push
(
num
,
STACK
 * 
°ack
)

30 
STACK
 *
ãmp
;

31 
ãmp
=(
°ack
 *)
	`mÆloc
((stack));

32 
ãmp
->
num
=num;

33 
ãmp
->
√xt
=
°ack
->
t›
;

34 
°ack
->
t›
=
ãmp
;

36 
	}
}

37 
	$p›
(
STACK
 * 
°ack
)

39 
STACK
 * 
t›
;

40 
t›
=
°ack
->top;

42 if(
°ack
==
t›
)

44 
	`¥ötf
("stack isÉmpty\n");

47 
	`¥ötf
("%d\n",
t›
->
num
);

48 
°ack
->
t›
Ò›->
√xt
;

49 
	`‰ì
(
t›
);

51 
	}
}

52 
	$p›_Æl
(
STACK
 * 
°ack
)

54 
°ack
->
t›
->
√xt
!=
NULL
)

56 
	`p›
(
°ack
);

59 
	}
}

62 
	$show_li°
(
Li°Node
 *
Li°
)

64 
Node
 * 
pCuºít
=
NULL
;

65 
pCuºít
 = 
Li°
;

66 
pCuºít
!=
NULL
)

68 
	`push
(
pCuºít
->
num
,
°ack
);

69 
pCuºít
ıCuºít->
pNext
;

72 
	}
}

74 
Li°Node
 * 
	$¸ót_node
(
num
)

76 
Li°Node
 * 
pCuºít
=
NULL
;

77 
pCuºít
=(
Li°Node
*)
	`mÆloc
((ListNode));

78 if(
pCuºít
==
NULL
)

80 
	`¥ötf
("creatÇodeÉrror\n");

81  
NULL
;

83 
pCuºít
->
num
=num;

84 
pCuºít
->
pHód
=
NULL
;

85 
pCuºít
->
pNext
=
NULL
;

86 
pCuºít
->
pTaû
=
NULL
;

87  
pCuºít
;

88 
	}
}

89 
	$add_node
(
Li°Node
 *
pLi°
,Li°Nodê* 
pNode
)

91 if(
pLi°
==
NULL
)

93 
	`¥ötf
("erro\n");

97 
pNode
->
pHód
=
pLi°
;

98 
pNode
->
pNext
=
NULL
;

99 
pLi°
->
pTaû
->
pNext
=
pNode
;

100 
pLi°
->
pTaû
=
pNode
;

102 
	}
}

104 
Li°Node
 *
	$¸ót_li°
(
num
)

106 
i
;

107 
Li°Node
 *
pLi°Hód
=
NULL
;

108 
Li°Node
 *
pCuºít
=
NULL
;

109 
pLi°Hód
=(
Li°Node
*)
	`mÆloc
((ListNode));

110 if(
pLi°Hód
==
NULL
)

112 
	`¥ötf
("mallocÜistÉrror\n");

113  
NULL
;

115 
pLi°Hód
->
pHód
=pListHead;

116 
pLi°Hód
->
pTaû
=pListHead;

117 
pLi°Hód
->
pNext
=
NULL
;

119 
i
=0;i<
num
;i++)

121 
pCuºít
=
	`¸ót_node
(
i
+1);

122 if(
pCuºít
==
NULL
)

124 
	`¥ötf
("creatÇodeÉrror\n");

125  
NULL
;

127 if(
pLi°Hód
==
NULL
)

129 
	`¥ötf
("noÜist\n");

130  
NULL
;

132 
	`add_node
(
pLi°Hód
,
pCuºít
);

134  
pLi°Hód
;

135 
	}
}

137 
	$maö
()

139 
Li°Node
 *
Li°
;

140 
Li°
=
	`¸ót_li°
(20);

141 
°ack
=
	`¸ót_°ack
();

142 
	`show_li°
(
Li°
);

143 
	`p›_Æl
(
°ack
);

145 
	}
}

	@/home/htodog/workspace/C/bishi/7/test_7_1.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

7 
	sTªe
{

8 
	mvÆ
;

9 
Tªe
 *
	mlchûd
;

10 
Tªe
 *
	mrchûd
;

11 }
	tTREENODE
,*
	tPTREE
;

12 
	giPªOrdî
[8]={1,2,4,7,3,5,6,8};

13 
	giInOrdî
[8]={4,7,2,1,5,3,8,6};

23 
PTREE
 
c⁄°ru˘_åì_c‹e
(*
PªOrdîSèπ
,\

24 *
PªOrdîEnd
,\

25 *
InOrdîSèπ
,\

26 *
InOrdîEnd
)

28 
PTREE
 
	gpRoŸNode
=
NULL
;

29 
	giRoŸVÆ
=0;

30 * 
	gpRoŸNodeOfInOrdî
;

31 
	giLe·TªeLí
;

33 
	giRoŸVÆ
=
PªOrdîSèπ
[0];

35 
	gpRoŸNode
=(
PTREE
)
mÆloc
((
TREENODE
));

36 
	gpRoŸNode
->
	gvÆ
=
iRoŸVÆ
;

37 
	gpRoŸNode
->
	glchûd
=
NULL
;

38 
	gpRoŸNode
->
	grchûd
=
NULL
;

40 if(
	gPªOrdîSèπ
==
PªOrdîEnd
)

42 if(
InOrdîSèπ
==
InOrdîEnd
)

44 if(*
PªOrdîSèπ
==*
InOrdîSèπ
)

46 
¥ötf
("%d\n",
pRoŸNode
->
vÆ
);

47  
	gpRoŸNode
;

52 
	gpRoŸNodeOfInOrdî
=
InOrdîSèπ
;

53 
	gpRoŸNodeOfInOrdî
<=
InOrdîEnd
&&*
pRoŸNodeOfInOrdî
!=
iRoŸVÆ
)

55 ++
pRoŸNodeOfInOrdî
;

58 
	giLe·TªeLí
=
pRoŸNodeOfInOrdî
-
InOrdîSèπ
;

60 if(
	giLe·TªeLí
>0)

62 
	gpRoŸNode
->
	glchûd
=
c⁄°ru˘_åì_c‹e
(
PªOrdîSèπ
+1,\

63 
PªOrdîSèπ
+
iLe·TªeLí
,\

64 
InOrdîSèπ
,\

65 
pRoŸNodeOfInOrdî
-1);

69 if(
	giLe·TªeLí
<
	gPªOrdîEnd
-
	gPªOrdîSèπ
)

71 
	gpRoŸNode
->
	grchûd
=
c⁄°ru˘_åì_c‹e
(
PªOrdîSèπ
+
iLe·TªeLí
+1,\

72 
PªOrdîEnd
,\

73 
pRoŸNodeOfInOrdî
+1,

74 
InOrdîEnd
);

76 
¥ötf
("%d\n",
pRoŸNode
->
vÆ
);

78  
	gpRoŸNode
;

81 
PTREE
 
c⁄°ru˘_åì
(*
PªOrdîSèπ
,\

82 *
PªOrdîEnd
,\

83 *
InOrdîSèπ
,\

84 *
InOrdîEnd
)

86  
c⁄°ru˘_åì_c‹e
(
PªOrdîSèπ
,
PªOrdîEnd
,
InOrdîSèπ
,
InOrdîEnd
);

89 
	$PªOrdîTøvî£
(
PTREE
 
T
)

91 if(
T
==
NULL
)

93 
	`¥ötf
("%d",
T
->
vÆ
);

94 
	`PªOrdîTøvî£
(
T
->
lchûd
);

95 
	`PªOrdîTøvî£
(
T
->
rchûd
);

96 
	}
}

98 
	$InOrdîTøvî£
(
PTREE
 
T
)

100 if(
T
==
NULL
)

102 
	`InOrdîTøvî£
(
T
->
lchûd
);

103 
	`¥ötf
("%d",
T
->
vÆ
);

104 
	`InOrdîTøvî£
(
T
->
rchûd
);

105 
	}
}

106 
	$EndOrdîTøvî£
(
PTREE
 
T
)

108 if(
T
==
NULL
)

110 
	`EndOrdîTøvî£
(
T
->
lchûd
);

111 
	`EndOrdîTøvî£
(
T
->
rchûd
);

112 
	`¥ötf
("%d",
T
->
vÆ
);

113 
	}
}

114 
	$maö
()

116 
PTREE
 
åì
;

117 
åì
=
	`c⁄°ru˘_åì
(
iPªOrdî
,\

118 
iPªOrdî
+7,\

119 
iInOrdî
,\

120 
iInOrdî
+7);

122 
	`¥ötf
("PreOrder:");

123 
	`PªOrdîTøvî£
(
åì
);

124 
	`¥ötf
("\n");

125 
	`¥ötf
("InOrder:");

126 
	`InOrdîTøvî£
(
åì
);

127 
	`¥ötf
("\n");

128 
	`¥ötf
("EndOrder:");

129 
	`EndOrdîTøvî£
(
åì
);

130 
	`¥ötf
("\n");

133 
	}
}

	@/home/htodog/workspace/C/bishi/8/test_8_1.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~<sys/io.h
>

14 
	#MAXSIZE
 100

	)

15 
	sBiTªe
{

16 
	md©a
;

17 
BiTªe
 *
	mlchûd
;

18 
BiTªe
 *
	mrchûd
;

19 
BiTªe
 *
	m∑ª¡
;

20 }
	tBITREE
;

21 
	tSåög
[100];

22 
	gj
=1;

23 
Såög
 
	g°r
;

25 
	$SåAssign
(
Såög
 
T
,*
ch¨s
)

27 
i
;

29 if(
	`°æí
(
ch¨s
)>
MAXSIZE
)

33 
T
[0]=
	`°æí
(
ch¨s
);

34 
i
=1;i<=
T
[0];i++)

35 
T
[
i
]=*(
ch¨s
+i-1);

38 
	}
}

40 
	$¸ót_åì
(
BITREE
 **
T
)

42 
ch
;

43 
ch
 = 
°r
[
j
++];

44 if('#'==
ch
)

46 *
T
=
NULL
;

50 *
T
=(
BITREE
*)
	`mÆloc
((BITREE));

51 if(!*
T
)

52 
	`exô
(1);

53 (*
T
)->
d©a
=
ch
;

54 (*
T
)->
∑ª¡
=
NULL
;

55 
	`¸ót_åì
(&(*
T
)->
lchûd
);

56 
	`¸ót_åì
(&(*
T
)->
rchûd
);

58 
	}
}

60 
	$PªOrdîTøvî£
(
BITREE
 * 
T
)

62 if(
T
==
NULL
)

64 if(
T
->
lchûd
!=
NULL
)

65 
T
->
lchûd
->
∑ª¡
=T;

66 if(
T
->
rchûd
!=
NULL
)

67 
T
->
rchûd
->
∑ª¡
=T;

68 
	`¥ötf
("%c",
T
->
d©a
);

69 if(
T
->
∑ª¡
!=
NULL
)

70 
	`¥ötf
("Ö¨íài†%c\n",
T
->
∑ª¡
->
d©a
);

72 
	`¥ötf
(" isÅopÇode\n");

74 
	`PªOrdîTøvî£
(
T
->
lchûd
);

75 
	`PªOrdîTøvî£
(
T
->
rchûd
);

76 
	}
}

78 
	$InOrdîTøvî£
(
BITREE
 *
T
)

80 if(
T
==
NULL
)

82 
	`InOrdîTøvî£
(
T
->
lchûd
);

83 
	`¥ötf
("%c",
T
->
d©a
);

84 
	`InOrdîTøvî£
(
T
->
rchûd
);

85 
	}
}

86 
	$EndOrdîTøvî£
(
BITREE
 *
T
)

88 if(
T
==
NULL
)

90 
	`EndOrdîTøvî£
(
T
->
lchûd
);

91 
	`EndOrdîTøvî£
(
T
->
rchûd
);

92 
	`¥ötf
("%c",
T
->
d©a
);

93 
	}
}

95 
	$föd_node
(
BITREE
 * 
T
,
d©a
,BITREE ** 
node
)

97 if(
T
==
NULL
||(*
node
)!=NULL)

99 if(
T
->
d©a
==data)

101 *
node
=
T
;

104 
	`föd_node
(
T
->
lchûd
,
d©a
,
node
);

105 
	`föd_node
(
T
->
rchûd
,
d©a
,
node
);

106 
	}
}

108 
BITREE
 * 
	$föd_lchûd
(
BITREE
 * 
T
)

110 if(
T
->
lchûd
==
NULL
)

111  
T
;

112  
	`föd_lchûd
(
T
->
lchûd
);

113 
	}
}

115 
BITREE
 *
	$check_∑ª¡
(
BITREE
 * 
node
)

117 if(
node
->
∑ª¡
==
NULL
)

119  
NULL
;

121 if(
node
->
∑ª¡
->∑ª¡==
NULL
)

123  
NULL
;

125 if(
node
->
∑ª¡
=Úode->∑ª¡->∑ª¡->
lchûd
)

127  
node
->
∑ª¡
->parent;

129  
	`check_∑ª¡
(
node
->
∑ª¡
);

130 
	}
}

132 
BITREE
 * 
	$gë_√xt_node
(
BITREE
 *
node
)

134 if(
node
==
NULL
)

135  
NULL
;

136 if(
node
->
lchûd
==
NULL
&&node->
∑ª¡
==NULL&&node->
rchûd
==NULL)

138 
	`¥ötf
("invalidÇode\n");

139  
NULL
;

142 if(
node
->
∑ª¡
==
NULL
)

144 
	`¥ötf
("%¯i†t›Çode\n",
node
->
d©a
);

146 if(
node
->
rchûd
==
NULL
)

148 
	`¥ötf
("%¯i†œ°Çode\n",
node
->
d©a
);

152 
BITREE
 *
ãmp
;

153 
ãmp
=
	`föd_lchûd
(
node
->
rchûd
);

154 if(
NULL
==
ãmp
)

156  
node
->
rchûd
;

159  
ãmp
;

163 if(
node
=Úode->
∑ª¡
->
lchûd
)

165 
	`¥ötf
("%¯i†%c'†À· chûd\n",
node
->
d©a
,node->
∑ª¡
->data);

167 if(
node
->
rchûd
==
NULL
)

169  
node
->
∑ª¡
;

173 
BITREE
 *
ãmp
;

174 
ãmp
=
	`föd_lchûd
(
node
->
rchûd
);

175 if(
NULL
==
ãmp
)

177  
node
->
rchûd
;

180  
ãmp
;

184 if(
node
=Úode->
∑ª¡
->
rchûd
)

186 
	`¥ötf
("%¯i†%c'†righàchûd\n",
node
->
d©a
,node->
∑ª¡
->data);

188 if(
node
->
rchûd
==
NULL
)

190 
	`¥ötf
("%¯d⁄'àha†righàchûd\n",
node
->
d©a
);

192  
	`check_∑ª¡
(
node
);

196 
BITREE
 *
ãmp
;

197 
ãmp
=
	`föd_lchûd
(
node
->
rchûd
);

198 if(
NULL
==
ãmp
)

200  
node
->
rchûd
;

203  
ãmp
;

206  
NULL
;

207 
	}
}

209 
	$maö
()

211 
BITREE
 *
åì
;

212 
BITREE
 **
node
;

213 
BITREE
 *
NextNode
=
NULL
;

214 
node
=(
BITREE
 **)
	`mÆloc
((BITREE**));

215 *
node
=
NULL
;

216 
	`SåAssign
(
°r
,"ABDF###E##C#G##");

217 
	`¸ót_åì
(&
åì
);

218 
	`PªOrdîTøvî£
(
åì
);

219 
	`¥ötf
("InOrderTraverse is ");

220 
	`InOrdîTøvî£
(
åì
);

221 
	`¥ötf
("\n");

222 
	`föd_node
(
åì
,'A',
node
);

223 if(*
node
==
NULL
)

225 
	`¥ötf
("can't findÇode\n");

230 
	`¥ötf
("you w™àtÿföd %¯√xànode\n",(*
node
)->
d©a
);

231 
NextNode
=
	`gë_√xt_node
(*
node
);

232 if(
NextNode
!=
NULL
)

234 
	`¥ötf
("√xànodêi†%c\n",
NextNode
->
d©a
);

239 
	`¥ötf
("%¯i†œ°Çode\n",(*
node
)->
d©a
);

244 
	}
}

	@/home/htodog/workspace/C/bishi/9/queue.c

1 
	~"../öc/queue.h
"

2 
	~"../öc/°ack.h
"

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

6 
°ack
 *
	g°ack1
 = 
NULL
;

7 
°ack
 *
	g°ack2
 = 
NULL
;

9 
	$°ack1_to_°ack2
(
°ack
 *
°ack1
,°ack *
°ack2
)

11 
tmp
;

12 if(
°ack1
 ==
NULL
){

13 
	`¥ötf
("stackÉrror");

16 !
	`is_em±y_°ack
(
°ack1
)){

17 
tmp
=
	`p›
(
°ack1
);

18 
	`push
(
tmp
,
°ack2
);

20 
	}
}

22 
	$¸ót_queue
()

24 
°ack1
 = 
	`¸ót_°ack
();

25 
°ack2
 = 
	`¸ót_°ack
();

26 if(
°ack2
 =
NULL
 || 
°ack1
 == NULL){

27 
	`¥ötf
("creat queueÉrror\n");

30 
	}
}

32 
	$≠≥nd_èû
(
vÆ
)

34 if(
°ack1
 !
NULL
&&
°ack2
 != NULL)

35 
	`push
(
vÆ
,
°ack1
);

37 
	}
}

39 
	$dñëe_hód
()

41 if(
°ack2
 =
NULL
){

42 
	`¥ötf
("stackÉrror\n");

45 if(!
	`is_em±y_°ack
(
°ack2
)){

46 
	`¥ötf
("dñëê%d\n",
°ack2
->
t›
->
num
);

47 
	`p›
(
°ack2
);

50 if(
	`is_em±y_°ack
(
°ack1
)){

51 
	`¥ötf
("queue isÉmpty\n");

54 
	`°ack1_to_°ack2
(
°ack1
,
°ack2
);

55 
	`¥ötf
("dñëê%d\n",
°ack2
->
t›
->
num
);

56 
	`p›
(
°ack2
);

59 
	}
}

60 
	$maö
()

62 
	`¸ót_queue
();

63 
	`push
(1,
°ack1
);

64 
	`push
(2,
°ack1
);

65 
	`push
(3,
°ack1
);

66 
	`dñëe_hód
();

67 
	`dñëe_hód
();

68 
	`dñëe_hód
();

69 
	`dñëe_hód
();

70 
	`≠≥nd_èû
(6);

71 
	`dñëe_hód
();

72 
	}
}

	@/home/htodog/workspace/C/bishi/9/test_9_1.c

1 
	~"../öc/queue.h
"

2 
	~"../öc/°ack.h
"

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

6 
°ack
 *
	g°ack1
 = 
NULL
;

7 
°ack
 *
	g°ack2
 = 
NULL
;

9 
	$°ack1_to_°ack2
(
°ack
 *
°ack1
,°ack *
°ack2
)

11 
tmp
;

12 if(
°ack1
 ==
NULL
){

13 
	`¥ötf
("stackÉrror");

16 !
	`is_em±y_°ack
(
°ack1
)){

17 
tmp
=
	`p›
(
°ack1
);

18 
	`push
(
tmp
,
°ack2
);

20 
	}
}

22 
	$¸ót_queue
()

24 
°ack1
 = 
	`¸ót_°ack
();

25 
°ack2
 = 
	`¸ót_°ack
();

26 if(
°ack2
 =
NULL
 || 
°ack1
 == NULL){

27 
	`¥ötf
("creat queueÉrror\n");

30 
	}
}

32 
	$≠≥nd_èû
(
vÆ
)

34 if(
°ack1
 !
NULL
&&
°ack2
 != NULL)

35 
	`push
(
vÆ
,
°ack1
);

37 
	}
}

39 
	$dñëe_hód
()

41 if(
°ack2
 =
NULL
){

42 
	`¥ötf
("stackÉrror\n");

45 if(!
	`is_em±y_°ack
(
°ack2
)){

46 
	`¥ötf
("dñëê%d\n",
°ack2
->
t›
->
num
);

47 
	`p›
(
°ack2
);

50 if(
	`is_em±y_°ack
(
°ack1
)){

51 
	`¥ötf
("queue isÉmpty\n");

54 
	`°ack1_to_°ack2
(
°ack1
,
°ack2
);

55 
	`¥ötf
("dñëê%d\n",
°ack2
->
t›
->
num
);

56 
	`p›
(
°ack2
);

59 
	}
}

60 
	$maö
()

62 
	`¸ót_queue
();

63 
	`push
(1,
°ack1
);

64 
	`push
(2,
°ack1
);

65 
	`push
(3,
°ack1
);

66 
	`dñëe_hód
();

67 
	`dñëe_hód
();

68 
	`dñëe_hód
();

69 
	`dñëe_hód
();

70 
	`≠≥nd_èû
(6);

71 
	`dñëe_hód
();

72 
	}
}

	@/home/htodog/workspace/C/bishi/inc/list.h

1 #i‚de‡
LIST_H


2 
	#LIST_H


	)

4 
	sli°
 {

5 
	mnum
;

6 
li°
* 
	m√xt
;

8 
li°
* 
	msiblög
;

11 
li°
* 
¸ót_li°
(* 
num
 , 
Àngth
);

12 
show_li°
(
li°
** 
hód
);

14 
li°
* 
föd_node
(li°** 
hód
, 
num
);

15 
dñëe_node
(
li°
** 
hód
, li°* 
node
);

	@/home/htodog/workspace/C/bishi/inc/queue.h

1 #i‚de‡
QUEUE_H


2 
	#QUEUE_H


	)

4 
queue
 *
¸ót_queue
();

6 
	squeue
{

7 *
	md©a
;

8 (*
	mpush
)(*,
	mqueue
 **);

9 *(*
	mp›
)(
	mqueue
 **);

10 
queue
 *
	mèû
;

11 
queue
 *
	m√xt
;

	@/home/htodog/workspace/C/bishi/inc/stack.h

1 #i‚de‡
STACK_H


2 
	#STACK_H


	)

4 
	~<°dboﬁ.h
>

6 
	s°ack
{

7 *
	md©a
;

8 (*
	mpush
)(*,
	m°ack
 **);

9 *(*
	mp›
)(
	m°ack
 **);

10 *(*
	mgë_mö
)(
	m°ack
 *);

11 
°ack
 *
	mmö_°ack
;

12 
°ack
 *
	m√xt
;

15 
°ack
 
	tSèck
;

16 
°ack
 *
¸ót_°ack
();

17 
boﬁ
 
is_em±y
(
°ack
 *);

	@/home/htodog/workspace/C/bishi/inc/tree.h

1 #i‚de‡
TREE_H


2 
	#TREE_H


	)

4 
	såì
{

5 
	md©a
;

6 
åì
 *
	mlchûd
;

7 
åì
 *
	mrchûd
;

10 
	tSåög
[100];

11 
SåAssign
(
Såög
 
T
,*
ch¨s
);

12 
¸ót_åì
(
åì
 **
T
,**
°r
);

13 
¥e_‹dî_åavî£
(
åì
 * 
T
);

14 
middÀ_‹dî_åavî£
(
åì
 *
T
);

15 
íd_Ordî_åavî£
(
åì
 *
T
);

16 
ã°_åì
(
åì
 *);

	@/home/htodog/workspace/C/bishi/list/list.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"../öc/li°.h
"

5 
li°
* 
	$¸ót_li°
(* 
num
 ,
Àngth
)

7 
li°
* 
hód
 = 
NULL
;

8 
li°
* 
cuºít
 = 
NULL
;

9 
li°
* 
√w_node
 = 
NULL
;

11 
hód
 = 
	`mÆloc
((
li°
));

12 
hód
->
num
 = 0;

13 
hód
->
√xt
 = 
NULL
;

15 
i
 = 0; i < 
Àngth
; ++i) {

16 i‡(0 =
i
) {

17 
hód
->
num
 =Çum[
i
];

18 
cuºít
 = 
hód
;

22 
√w_node
 = 
	`mÆloc
((
li°
));

23 
√w_node
->
num
 =Çum[
i
];

24 
√w_node
->
√xt
 = 
NULL
;

25 
√w_node
->
siblög
 = 
NULL
;

26 
cuºít
->
√xt
 = 
√w_node
;

27 
cuºít
 = 
√w_node
;

31 
cuºít
 = 
hód
;

33  
cuºít
 ) {

34 
cuºít
->
num
) {

36 
cuºít
->
siblög
 = 
	`föd_node
–&
hód
 , 4 );

39 
cuºít
->
siblög
 = 
	`föd_node
–&
hód
 , 5 );

42 
cuºít
->
siblög
 = 
	`föd_node
–&
hód
 , 2 );

45 
cuºít
->
siblög
 = 
	`föd_node
–&
hód
 , 1 );

49 
cuºít
 = cuºít->
√xt
;

51  
hód
;

52 
	}
}

54 
	$show_li°
(
li°
** 
hód
)

56 
li°
* 
cuºít
 = 
NULL
;

57 i‡(
NULL
 =*
hód
)

59 
cuºít
 = *
hód
;

60 
NULL
 !
cuºít
) {

61 
	`¥ötf
("now = %d \n", 
cuºít
->
num
);

62 i‡–
NULL
 =
cuºít
->
siblög
 ) {

63 
cuºít
 = cuºít->
√xt
;

66 
cuºít
 = cuºít->
√xt
;

68 
	`¥ötf
("\n");

70 
	}
}

72 
li°
* 
	$föd_node
(
li°
** 
hód
, 
num
)

74 
li°
* 
cuºít
 = *
hód
;

75 
NULL
 !
cuºít
) {

76 i‡(
cuºít
->
num
 ==Çum)

77  
cuºít
;

78 
cuºít
 = cuºít->
√xt
;

80  
NULL
;

81 
	}
}

83 
	$dñëe_node
(
li°
** 
hód
, li°* 
node
)

85 
li°
* 
cuºít
 = 
node
->
√xt
;

86 i‡(
node
->
√xt
 !
NULL
) {

87 
node
->
num
 =Çode->
√xt
->num;

88 
node
->
√xt
 =Çode->next->next;

89 
	`‰ì
(
cuºít
);

91 
cuºít
 = *
hód
;

92 
node
 !
cuºít
->
√xt
) {

93 
cuºít
 = cuºít->
√xt
;

95 
cuºít
->
√xt
 = 
NULL
;

96 
	`‰ì
(
node
);

99 
	}
}

	@/home/htodog/workspace/C/bishi/queue/queue.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"../öc/queue.h
"

5 
push_c‹e
(*,
queue
 **);

6 *
p›_c‹e
(
queue
 **);

7 
queue
 *
öô_c‹e
();

8 
queue
 *
¸ót_queue
();

11 
queue
 *
	$öô_c‹e
()

13 
queue
 *
t›
;

14 
t›
=(
queue
 *)
	`mÆloc
((queue));

15 
t›
->
d©a
 = 
NULL
;

16 
t›
->
push
 = 
push_c‹e
;

17 
t›
->
p›
 = 
p›_c‹e
;

18 
t›
->
èû
 = 
NULL
;

19 
t›
->
√xt
 = 
NULL
;

20  
t›
;

21 
	}
}

23 
	$push_c‹e
(*
p
, 
queue
 **queue)

25 
queue
 *
tmp
 = *queue;

26 
queue
 *
√w
 = 
NULL
;

27 i‡–
NULL
 =
p
 ) {

32 i‡(
NULL
 =(*
queue
)->
èû
) {

33 (*
queue
)->
d©a
 = 
p
;

34 (*
queue
)->
èû
 = (*queue);

38 
√w
 = 
	`öô_c‹e
();

39 
√w
->
d©a
 = 
p
;

41 (*
queue
)->
èû
->
√xt
 = 
√w
;

42 (*
queue
)->
èû
 = (*queue)->èû->
√xt
;

43 
	}
}

46 *
	$p›_c‹e
(
queue
 **queue)

48 
queue
 *
tmp
=
NULL
;

50 if(
NULL
 =(*
queue
)->
èû
)

52 
	`¥ötf
("empty\n");

53  
NULL
;

56 *
p
 = (*
queue
)->
d©a
;

57 
tmp
 = *
queue
;

60 if((*
queue
)->
èû
 == (*queue)) {

61 (*
queue
)->
èû
 = 
NULL
;

62  
p
;

65 (*
queue
)->
√xt
->
èû
 = (*queue)->tail;

66 *
queue
 = (*queue)->
√xt
;

67 
	`‰ì
(
tmp
);

68 
tmp
 = 
NULL
;

69  
p
;

70 
	}
}

72 
queue
 *
	$¸ót_queue
()

74  
	`öô_c‹e
();

75 
	}
}

	@/home/htodog/workspace/C/bishi/sort/sort.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	$show_nums
(*
numbîs
,
Àngth
)

6 
i
=0;i<
Àngth
;i++)

8 
	`¥ötf
("%d ",
numbîs
[
i
]);

10 
	`¥ötf
("\n");

11 
	}
}

12 
	$sw≠
(*
num1
,*
num2
)

14 
tmp
;

15 
tmp
 = *
num1
;

16 *
num1
 = *
num2
;

17 *
num2
 = 
tmp
;

18 
	}
}

19 
	$quick
(*
numbîs
,
Àngth
,
°¨t
,
íd
)

23 if(
°¨t
==
íd
)

25 
øndom
 = 
	`ønd
()%(
íd
-
°¨t
)+start;

26 
p1
=
°¨t
-1;

27 
	`¥ötf
("øndom=%d\n",
øndom
);

28 
	`sw≠
(&
numbîs
[
øndom
],&numbîs[
íd
]);

29 
i
=
°¨t
;i<
íd
;i++)

31 if(
numbîs
[
i
] <Çumbîs[
íd
])

34 ++
p1
;

35 if(
p1
 !
i
)

36 
	`sw≠
(&
numbîs
[
p1
],&numbîs[
i
]);

39 ++
p1
;

40 
	`sw≠
(&
numbîs
[
p1
],&numbîs[
íd
]);

41 if(
°¨t
 < 
p1
)

42 
	`quick
(
numbîs
,
Àngth
,
°¨t
,
p1
-1);

43 if(
p1
 < 
íd
)

44 
	`quick
(
numbîs
,
Àngth
,
p1
+1,
íd
);

45 
	}
}

47 
	$maö
()

49 
	#LEN
 8

	)

50 
nums
[
LEN
]={2,4,3,5,4,7,4,5};

51 
	`show_nums
(
nums
,
LEN
);

52 
	`quick
(
nums
, 8 , 0 , 
LEN
-1);

53 
	`show_nums
(
nums
,
LEN
);

55 
	}
}

	@/home/htodog/workspace/C/bishi/stack/stack.c

1 
	~<°dio.h
>

2 
	~"../öc/°ack.h
"

3 
	~<°dlib.h
>

5 
push_c‹e
(* ,
°ack
 **);

6 
push
(* ,
°ack
 **);

7 *
p›_c‹e
(
°ack
 **);

8 *
p›
(
°ack
 **);

9 
°ack
 *
öô_c‹e
();

10 
°ack
 *
loˇl_öô_√w_°ack_node
();

11 *
gë_mö
(
°ack
 *);

12 
	#MIN
 0

	)

16 *
	$gë_mö
(
°ack
 *stack)

18  (*)(
°ack
->
mö_°ack
->
d©a
) ;

19 
	}
}

21 
	$push_c‹e
–*
d©a
,
°ack
 **stack)

23 
°ack
 *
t›
;

24 
t›
 = 
	`loˇl_öô_√w_°ack_node
();

25 
t›
->
d©a
 = data;

26 
t›
->
√xt
 = *
°ack
;

27 *
°ack
 = 
t›
;

28 
	}
}

29 
	$push
(*
d©a
,
°ack
 **stack)

31 #i‡
MIN


32 
mö
 = *(*)(*
°ack
)->
mö_°ack
->
d©a
;

34 i‡((*
°ack
Ë=(*°ack)->
√xt
)

35 
mö
 = *(*)
d©a
;

38 
	`push_c‹e
(
d©a
,
°ack
);

40 #i‡
MIN


41 if(*(*)
d©a
 < 
mö
)

42 
	`push_c‹e
(
d©a
,&((*
°ack
)->
mö_°ack
));

44 
	`push_c‹e
(&
mö
,&((*
°ack
)->
mö_°ack
));

46 
	}
}

48 * 
	$p›_c‹e
(
°ack
 **stack)

50 if(
NULL
 =*
°ack
)

51  
NULL
;

53 if((*
°ack
)->
√xt
 == *stack){

54 
	`¥ötf
("stack isÉmpty\n");

55  
NULL
;

58 
°ack
 * 
t›
;

59 *
d©a
 = (*
°ack
)->data;

60 
t›
 = *
°ack
;

63 *
°ack
 = (*°ack)->
√xt
;

65 
	`‰ì
(
t›
);

66 
t›
 = 
NULL
;

68  
d©a
;

69 
	}
}

71 *
	$p›
(
°ack
 **stack)

73 #i‡
MIN


74 
	`p›_c‹e
(&((*
°ack
)->
mö_°ack
));

76  
	`p›_c‹e
(
°ack
);

77 
	}
}

80 
boﬁ
 
	$is_em±y
(
°ack
 *stack)

82 if(
NULL
 =
°ack
)

84 
	`¥ötf
("stack is invalid!\n");

85  
åue
;

87 if(
°ack
->
√xt
 == stack){

88  
åue
;

90  
Ál£
;

91 
	}
}

93 
°ack
 *
	$öô_c‹e
()

95 
°ack
 *
t›
;

96 
t›
=(
°ack
 *)
	`mÆloc
((stack));

97 
t›
->
d©a
=
NULL
;

98 
t›
->
push
 =Öush;

99 
t›
->
p›
 = 
p›_c‹e
;

100 
t›
->
gë_mö
 = get_min;

101 
t›
->
mö_°ack
 = 
NULL
;

102 
t›
->
√xt
=top;

103  
t›
;

104 
	}
}

106 
°ack
 *
	$loˇl_öô_√w_°ack_node
()

108 
°ack
 *
√w_°ack
 = 
NULL
;

109 
√w_°ack
 = 
	`öô_c‹e
();

110 #i‡
MIN


111 if(
NULL
 !
√w_°ack
 && NULL =√w_°ack->
mö_°ack
)

113 
√w_°ack
->
mö_°ack
 = 
	`öô_c‹e
();

114  
√w_°ack
;

116 #ñi‡0==
MIN


117 if–
NULL
 !
√w_°ack
 )

118  
√w_°ack
;

120  
NULL
;

121 
	}
}

123 
°ack
 *
	$¸ót_°ack
()

125  
	`loˇl_öô_√w_°ack_node
();

126 
	}
}

	@/home/htodog/workspace/C/bishi/tree/tree.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<sys/io.h
>

5 
	~"../öc/åì.h
"

7 
	#MAXSIZE
 100

	)

9 
	gj
=1;

11 
Såög
 
	g°r
;

13 
	$SåAssign
(
Såög
 
T
,*
ch¨s
)

15 
i
;

16 if(
	`°æí
(
ch¨s
)>
MAXSIZE
)

20 
T
[0]=
	`°æí
(
ch¨s
);

21 
i
=1;i<=
T
[0];i++)

22 
T
[
i
]=*(
ch¨s
+i-1);

25 
	}
}

27 
	$¸ót_åì
(
åì
 **
T
,**
°r
)

29 
ch
;

30 i‡('\0' =**
°r
) {

34 
ch
 = **
°r
;

35 ++(*
°r
);

36 if('#'==
ch
)

38 *
T
=
NULL
;

42 *
T
=(
åì
 *)
	`mÆloc
((tree ));

43 if(!*
T
)

44 
	`exô
(1);

45 (*
T
)->
d©a
=
ch
;

46 
	`¸ót_åì
(&(*
T
)->
lchûd
,
°r
);

47 
	`¸ót_åì
(&(*
T
)->
rchûd
,
°r
);

49 
	}
}

51 
	$¥e_‹dî_åavî£
(
åì
 * 
T
)

53 if(
T
==
NULL
)

55 
	`¥ötf
("%c",
T
->
d©a
);

56 
	`¥e_‹dî_åavî£
(
T
->
lchûd
);

57 
	`¥e_‹dî_åavî£
(
T
->
rchûd
);

58 
	}
}

60 
	$middÀ_‹dî_åavî£
(
åì
 *
T
)

62 if(
T
==
NULL
)

64 
	`middÀ_‹dî_åavî£
(
T
->
lchûd
);

65 
	`¥ötf
("%c",
T
->
d©a
);

66 
	`middÀ_‹dî_åavî£
(
T
->
rchûd
);

67 
	}
}

69 
	$íd_‹dî_åavî£
(
åì
 *
T
)

71 if(
T
==
NULL
)

73 
	`íd_‹dî_åavî£
(
T
->
lchûd
);

74 
	`íd_‹dî_åavî£
(
T
->
rchûd
);

75 
	`¥ötf
("%c",
T
->
d©a
);

76 
	}
}

78 
	$ã°_åì
(
åì
 *
roŸ
)

80 
	`¥e_‹dî_åavî£
(
roŸ
);

81 
	`¥ötf
("\n");

82 
	`middÀ_‹dî_åavî£
(
roŸ
);

83 
	`¥ötf
("\n");

84 
	`íd_‹dî_åavî£
(
roŸ
);

85 
	`¥ötf
("\n");

86 
	}
}

	@
1
.
0
45
2020
/home/htodog/workspace/C/bishi/10/test_10_1.c
/home/htodog/workspace/C/bishi/11/test_11_1.c
/home/htodog/workspace/C/bishi/12/test_12_1.c
/home/htodog/workspace/C/bishi/13/test_13_1.c
/home/htodog/workspace/C/bishi/14/test_14_1.c
/home/htodog/workspace/C/bishi/15/test_15_1.c
/home/htodog/workspace/C/bishi/16/test_16_1.c
/home/htodog/workspace/C/bishi/17/test_17_1.c
/home/htodog/workspace/C/bishi/18/test_18_1.c
/home/htodog/workspace/C/bishi/20/test_20_1.c
/home/htodog/workspace/C/bishi/21/test_21_1.c
/home/htodog/workspace/C/bishi/22/test_22_1.c
/home/htodog/workspace/C/bishi/23/test_23_1.c
/home/htodog/workspace/C/bishi/24/test_24_1.c
/home/htodog/workspace/C/bishi/25/test_25_1.c
/home/htodog/workspace/C/bishi/26/test_26_1.c
/home/htodog/workspace/C/bishi/27/test_27_1.c
/home/htodog/workspace/C/bishi/28/test_28_1.c
/home/htodog/workspace/C/bishi/3/test3_1.c
/home/htodog/workspace/C/bishi/3/test3_2.c
/home/htodog/workspace/C/bishi/30/test_30_1.c
/home/htodog/workspace/C/bishi/31/test_31_1.c
/home/htodog/workspace/C/bishi/32/test_32_1.c
/home/htodog/workspace/C/bishi/33/test_33_1.c
/home/htodog/workspace/C/bishi/34/test_34_1.c
/home/htodog/workspace/C/bishi/35/test_35_1.c
/home/htodog/workspace/C/bishi/36/test_36_1.c
/home/htodog/workspace/C/bishi/38/test_38_1.c
/home/htodog/workspace/C/bishi/38/test_38_2.c
/home/htodog/workspace/C/bishi/4/test4_1.c
/home/htodog/workspace/C/bishi/5/test5_1.c
/home/htodog/workspace/C/bishi/6/test_6_1.c
/home/htodog/workspace/C/bishi/7/test_7_1.c
/home/htodog/workspace/C/bishi/8/test_8_1.c
/home/htodog/workspace/C/bishi/9/queue.c
/home/htodog/workspace/C/bishi/9/test_9_1.c
/home/htodog/workspace/C/bishi/inc/list.h
/home/htodog/workspace/C/bishi/inc/queue.h
/home/htodog/workspace/C/bishi/inc/stack.h
/home/htodog/workspace/C/bishi/inc/tree.h
/home/htodog/workspace/C/bishi/list/list.c
/home/htodog/workspace/C/bishi/queue/queue.c
/home/htodog/workspace/C/bishi/sort/sort.c
/home/htodog/workspace/C/bishi/stack/stack.c
/home/htodog/workspace/C/bishi/tree/tree.c
